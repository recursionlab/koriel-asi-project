name: Auto-merge on Label

on:
  pull_request_target:
    types: [labeled, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write

jobs:
  merge:
    if: >-
      contains(github.event.pull_request.labels.*.name, 'automerge')
      && github.event.pull_request.state == 'open'
      && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Maybe merge when green
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const { owner, repo } = context.repo;
            // Get latest head SHA
            const headSha = pr.head.sha;
            // Check checks API
            const checks = await github.rest.checks.listForRef({ owner, repo, ref: headSha, per_page: 100 });
            const runs = checks.data.check_runs || [];
            const failing = runs.filter(r => ['failure','timed_out','cancelled','action_required'].includes((r.conclusion||'').toLowerCase()));
            const pending = runs.filter(r => !r.conclusion);
            // If there are no check runs, fallback to status API
            if (runs.length === 0) {
              const status = await github.rest.repos.getCombinedStatusForRef({ owner, repo, ref: headSha });
              const state = status.data.state; // success, failure, pending
              if (state !== 'success') {
                core.info(`Combined status is ${state}; not merging`);
                return;
              }
            } else {
              if (failing.length > 0 || pending.length > 0) {
                core.info(`Checks not green (failing=${failing.length}, pending=${pending.length}); not merging`);
                return;
              }
            }
            // Merge using merge commit by default; squash if label present
            const labels = (pr.labels||[]).map(l => l.name);
            const method = labels.includes('squash') ? 'squash' : 'merge';
            await github.rest.pulls.merge({ owner, repo, pull_number: pr.number, merge_method: method });
            core.info(`Merged PR #${pr.number} with method ${method}`);
