name: auto-mesh
on:
  push:
    paths: ["research/new/**/*.pdf"]
  workflow_dispatch: {}
jobs:
  ingest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y poppler-utils
      - name: Extract + stub
        run: |
          python - <<'PY'
from pathlib import Path
import subprocess, json, re, hashlib, datetime as dt

root=Path("."); out=Path("ops/ingest"); out.mkdir(parents=True, exist_ok=True)
meta=Path("docs/Meta-ToC.md"); opsf=Path("spec/operators.md"); invf=Path("spec/invariants.md")
agents=Path("prompts/agents.jsonl"); bundle=Path("ops/context_bundle.json")
for p in Path("research/new").rglob("*.pdf"):
    txt=out/(p.stem+".txt"); subprocess.run(["pdftotext","-layout",str(p),str(txt)], check=True)
    T=txt.read_text(errors="ignore"); title=re.findall(r"^[^\n]{8,120}", T, re.M)
    title=(title[0].strip() if title else p.stem); h=hashlib.sha1((title+str(p.stat().st_size)).encode()).hexdigest()[:8]
    # 1) Meta-ToC
    meta.parent.mkdir(parents=True, exist_ok=True)
    meta.write_text((meta.read_text() if meta.exists() else "# Meta-ToC\n") + f"\n- {title} [{dt.date.today()}] (id:{h})\n")
    # 2) Operators stub
    opsf.parent.mkdir(parents=True, exist_ok=True)
    with opsf.open("a") as f:
        f.write(f"\n## OP-{h} {title}\n- Inputs: TBA\n- Transform: TBA\n- Outputs: TBA\n- Sources: research/new/{p.name}\n")
    # 3) Invariant stub
    invf.parent.mkdir(parents=True, exist_ok=True)
    with invf.open("a") as f:
        f.write(f"\n### I-{h} {title}\n- Claim: TBA\n- Supports/Conflicts: TBA\n- Evidence: research/new/{p.name}\n")
    # 4) Agent perspective stub
    agents.parent.mkdir(parents=True, exist_ok=True)
    with agents.open("a") as f:
        f.write(json.dumps({"name":f"Reader_{h}","role":f"Summarize {title} and propose links (id:{h})"})+"\n")
# 5) Rebuild bundle
Path("ops").mkdir(exist_ok=True)
b={"context_file":"docs/CONTEXT.md","system_prompt":"prompts/system.md","agents_config":"prompts/agents.jsonl","version":"v0.1"}
Path("ops/context_bundle.json").write_text(json.dumps(b,indent=2))
PY
      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "mesh: auto-ingest new PDFs â†’ stubs + bundle"
          branch: auto/mesh
          title: "mesh: ingest new PDFs and create operator/invariant stubs"
          body: |
            This PR was auto-generated. Fill TBA fields, cross-link, then merge.
          labels: auto-mesh, needs-curation
