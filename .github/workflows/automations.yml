name: Extended Automations

on:
  push:
    paths:
      - 'research/new/**/*.pdf'
  workflow_dispatch:
  schedule:
    # Nightly sitrep at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: automations-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pdf-ingest:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'research/new/') || github.event_name == 'workflow_dispatch'
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: System dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils
      - name: Extract PDFs and create stubs
        id: extract
        shell: bash
        run: |
          set -euo pipefail
          python - <<'PY'
          from pathlib import Path
          import subprocess, json, re, hashlib, datetime as dt, os
          root=Path("."); out=Path("ops/ingest"); out.mkdir(parents=True, exist_ok=True)
          meta=Path("docs/Meta-ToC.md"); opsf=Path("spec/operators.md"); invf=Path("spec/invariants.md")
          agents=Path("prompts/agents.jsonl"); bundle=Path("ops/context_bundle.json")
          touched=[]
          src=Path("research/new")
          if src.exists():
              for p in src.rglob("*.pdf"):
                  txt=out/(p.stem+".txt"); txt.parent.mkdir(parents=True, exist_ok=True)
                  subprocess.run(["pdftotext","-layout",str(p),str(txt)], check=True)
                  T=txt.read_text(encoding="utf-8", errors="ignore")
                  title=re.findall(r"^[^\n]{8,120}", T, re.M)
                  title=(title[0].strip() if title else p.stem)
                  h=hashlib.sha1((title+str(p.stat().st_size)).encode()).hexdigest()[:8]
                  meta.parent.mkdir(parents=True, exist_ok=True)
                  line=f"- {title} [{dt.date.today()}] (id:{h})"
                  cur=meta.read_text(encoding="utf-8") if meta.exists() else "# Meta-ToC\n"
                  if line not in cur:
                      meta.write_text(cur.rstrip()+"\n"+line+"\n", encoding="utf-8")
                  opsf.parent.mkdir(parents=True, exist_ok=True)
                  with opsf.open("a", encoding="utf-8") as f:
                      f.write(f"\n## OP-{h} {title}\n- Inputs: TBA\n- Transform: TBA\n- Outputs: TBA\n- Source: research/new/{p.name}\n")
                  invf.parent.mkdir(parents=True, exist_ok=True)
                  with invf.open("a", encoding="utf-8") as f:
                      f.write(f"\n### I-{h} {title}\n- Claim: TBA\n- Evidence: research/new/{p.name}\n")
                  agents.parent.mkdir(parents=True, exist_ok=True)
                  with agents.open("a", encoding="utf-8") as f:
                      f.write(json.dumps({"name":f"Reader_{h}","role":f"Summarize {title} and propose links (id:{h})"}, ensure_ascii=False)+"\n")
                  touched.append(str(p))
          bundle.parent.mkdir(parents=True, exist_ok=True)
          bundle.write_text(json.dumps(
              {"context_file":"docs/CONTEXT.md",
               "system_prompt":"prompts/system.md",
               "agents_config":"prompts/agents.jsonl",
               "version":"v0.1",
               "pdfs": touched}, indent=2), encoding="utf-8")
          Path(os.environ["GITHUB_OUTPUT"]).write_text(f"count={len(touched)}\n")
          PY
      - name: Create ingest PR (only if changes)
        if: steps.extract.outputs.count != '0'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: auto/ingest-${{ github.run_id }}
          title: "ingest: mesh PDFs â†’ stubs"
          commit-message: "ingest: mesh PDFs into stubs and context bundle"
          body: "Auto-generated by PDF ingest automation."
          labels: auto-mesh, needs-curation
          delete-branch: true

  nightly-sitrep:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install pytest
      - name: Generate nightly report
        run: |
          mkdir -p artifacts/sitrep
          echo "# Nightly SITREP - $(date)" > artifacts/sitrep/nightly.md
          echo "" >> artifacts/sitrep/nightly.md
          echo "## Repository Status" >> artifacts/sitrep/nightly.md
          echo "- Files: $(find . -name '*.py' | wc -l) Python files" >> artifacts/sitrep/nightly.md
          echo "- Tests: $(find tests/ -name '*.py' | wc -l) test files" >> artifacts/sitrep/nightly.md
          echo "- Last commit: $(git log -1 --pretty=format:'%h %s %cr')" >> artifacts/sitrep/nightly.md
          echo "" >> artifacts/sitrep/nightly.md
          echo "## Test Summary" >> artifacts/sitrep/nightly.md
          pytest tests/ --collect-only -q 2>/dev/null | head -10 >> artifacts/sitrep/nightly.md || echo "Tests collection failed" >> artifacts/sitrep/nightly.md
      - uses: actions/upload-artifact@v4
        with:
          name: nightly-sitrep
          path: artifacts/sitrep/
          if-no-files-found: ignore